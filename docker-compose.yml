version: '3'

services:
  database:
    container_name: database
    image: postgres:13-alpine
    restart: always
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 10

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    env_file:
      - ./.env
    restart: always
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 200

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "./entrypoint_api.sh" ]
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    restart: always
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"

  celery_worker:
    container_name: celery
    build:
      context: .
    image: celery:latest
    env_file:
      - ./.env
    command: >
             sh -c "
             cd src/ &&
             celery -A root worker --loglevel=INFO -B"
    restart: always
    depends_on:
      api:
        condition: service_started
